[buildout]

extensions =
    mr.developer

eggs = behaving

parts = behave
    test
    appium
    iosApp

show-picked-versions = true
develop = .
[behave]
recipe = zc.recipe.egg
eggs = behaving
    behave
interpreter = tpy

[appium]
recipe = gp.recipe.node
npms = appium

[test]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    cat <<EOF > ${buildout:directory}/bin/test
        #!/bin/sh

        mkdir -p ${buildout:directory}/var/sms
        mkdir -p ${buildout:directory}/var/mail

        ${buildout:directory}/bin/smsmock -o ./var/sms &
        sms_pid=\$!

        ${buildout:directory}/bin/mailmock -o ./var/mail &
        mail_pid=\$!

        ${buildout:directory}/bin/appium --log-level=warn > /dev/null &
        appium_pid=\$!

        cd ${buildout:directory}/src/behaving/tests/www
        python_version=\$(python -c "import sys; print(sys.version_info[0])")
        if [ \$python_version -eq 2 ]
        then
            python -m SimpleHTTPServer 8080 > /dev/null 2>&1 &
        else
            python -m http.server 8080 > /dev/null 2>&1  &
        fi
        www_pid=\$!

        ${buildout:directory}/bin/behave \$1 ${buildout:directory}/src/behaving/tests/features

        kill \$sms_pid
        kill \$mail_pid
        kill \$appium_pid
        kill \$www_pid
    EOF
    chmod a+x ${buildout:directory}/bin/test

[iosApp]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    echo "Building iOS test app"
    cd ${buildout:directory}/src/behaving/tests/apps/ios_test_app
    xcodebuild -sdk iphonesimulator -arch i386